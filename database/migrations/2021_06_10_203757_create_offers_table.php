<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateOffersTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('offers', function (Blueprint $table) {
            
            $table->id();// It will be encoded and stored in hex_id, this is a preparing for sending the transaction to the Ethereum blockchain.
            $table->string('title',100);// It contains the title of the offer.
            $table->string('valid')->nullable();// It contains the value that indicates the validation of the offer, if the value == true, then the offer is valid, it the value == false, then the propery is invalid. 
            $table->string('state')->nullable();// It contains the current state of the offer, if the value == true, then the property is still for silling, if the value == false, then the property is sold.
            $table->string('image')->nullable(); // it will be hashed and stored in hash_picture
            $table->text('content',1000);//It contains the description of the property. It accepts 1000 characters.
            $table->text('hash',42)->nullable(); // It contains the address of the offer in the Ethereum blockchain. It accepts 42 characters.
            $table->text('value',100)->nullable(); // It contains the price of the property. It accepts 100 digits.
            $table->text('owner',42)->nullable(); // It contains the blockchain address of of the owner. It accepts 42 characters.
            $table->text('hex_id',64)->nullable();// It contains the encoded value of the offer_id. It accepts 64 characters.
            $table->text('hash_picture',32)->nullable(); // It contains the md5 hash value the main picture of the property. According to the MD5 hash function, it accepts 32 characters.
            $table->text('certificate_id',100)->nullable();//It contains the the certificate id of the property. It accepts 100 digits.
            $table->text('tx',66)->nullable();// It contains the hash value of the transaction that has been generated by the create, buy or cancel process.  
            $table->text('hex_data',266)->nullable(); // It contains the hex data taht will be sent by MetaMask wallet. It consists of the encoded values of the offer_id, certificate_id, owner and hash_picture.It accepts 266 characters.

            $table->timestamps();// It indicates to the time for creating this offer.

            $table->bigInteger('user_id')->unsigned(); //It is the id of the user who owns this offer.
            $table->foreign('user_id')->references('id')->on('users')
            ->onDelete('cascade')->onUpdate('cascade');
            
            $table->bigInteger('area_id')->unsigned();// It is the area that includes this offer.
            $table->foreign('area_id')->references('id')->on('areas')
            ->onDelete('cascade')->onUpdate('cascade');
           
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('offers');
    }
}
